#!/usr/bin/env bash

CMD="$1"

if [ "${CMD:=help}" = "help" ]; then
  printusage "$0" && exit 0
fi

getsinkid() {
  SINKS=$(pactl list short sinks)
  if echo "$SINKS" | grep --quiet bluez_sink; then
    echo "$BLUEZ" | head -n 1 | cut -f 1
  else
    echo "$SINKS" | head -n 1 | cut -f 1
  fi
}

curwinid() {
  xprop -root | awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/{print $NF}'
}

winpid() {
  xprop -id "$1" | awk '/_NET_WM_PID\(CARDINAL\)/{print $NF}'
}

getseconddisplay() {
  if DPINFO=$(xrandr | grep -v 'eDP-1' | grep ' connected'); then
    echo "$DPINFO" | cut -d ' ' -f 1
  fi
  exit 1
}

wincmd() {
  cat "/proc/$(winpid "$(curwinid)")/cmdline"
}

isterm() {
  wincmd | grep --quiet --ignore-case 'terminal'
}

function focusedws() {
  i3-msg -t get_workspaces |
    jq '.[] | select(.focused==true).name' |
    tr -d \"
}

case "$CMD" in
  sinkid)
    # prints pulseaudio sink id
    getsinkid;;
  winid)
    # x window id for current pane
    curwinid;;
  winpid)
    # pid of the focused window
    winpid "$(curwinid)";;
  wincmd)
    # cmdline of the focused window
    wincmd ;;
  focusedws)
    # get focused i3 workspace
    focusedws ;;
  isterm)
    # exits with status 1 if focused window is a terminal, 0 otherwise
    isterm ;;
  seconddisplay)
    # name of the non-laptop monitor
    getseconddisplay;;
  *) printusage "$0" && exit 1
esac
