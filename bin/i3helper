#!/usr/bin/env bash

CMD="$1"

if [ "${CMD:=help}" = "help" ]; then
  printusage "$0" && exit 0
fi

lock() {
  i3lock -c 43203f -I 3 -f -d
}

upmeta() {
  xdotool keyup meta
  sleep 0.5
}

copy() {
  if sysinfo isterm; then
    xsel -op | xsel -ib
  else
    upmeta
    # Ctrl+c is actually a better solution for non-terminals
    xdotool key 'Ctrl+c'
    xsel -ob | xsel -ip
  fi
}

paste() {
  if sysinfo isterm; then
    xdotool click 2
  else
    # Ctrl+v is actually a better solution for non-terminals
    upmeta
    xdotool key 'Ctrl+v'
  fi
}

function gotows() {
  local newws="$1"
  local currws=$(sysinfo focusedws)
  if [ "$newws" == "$currws" ]; then
    i3-msg "focus right"
  else
    i3-msg "workspace $newws"
  fi
}

case "$CMD" in
  lock)
    # locks the system, requires password to log back in
    lock ;;
  logout)
    # logs out of the system
    i3-msg exit ;;
  suspend)
    # suspends the system
    lock && systemctl suspend ;;
  hibernate)
    # puts the system in hibernate mode
    lock && systemctl hibernate ;;
  reboot)
    # restarts the system
    systemctl reboot ;;
  shutdown)
    # shuts the system down
    systemctl poweroff ;;
  prompt)
    # asks the user before executing a powerful command
    PROMPTED="$2"
    if [ -z "$PROMPTED" ]; then
      exit 1;
    fi
    localdb "prompt" "$PROMPTED"
    i3-msg 'mode "Are you sure?"';;
  execute)
    # executes the last prompted command
    CMD=$(localdb "prompt")
    eval "$CMD";;
  volup)
    # turns the volume up
    pactl set-sink-volume "$(sysinfo sinkid)" +5% ;;
  voldown)
    # turns the volume down
    pactl set-sink-volume "$(sysinfo sinkid)" -5% ;;
  voltoggle)
    # mutes/unmutes the sound
    pactl set-sink-mute "$(sysinfo sinkid)" toggle ;;
  screenshot)
    # takes a screenshot of the selected rectangle
    scrot -s -e "mv \$f $HOME/screenshots/" ;;
  gotows)
    # focuses the given workspace
    gotows "$2" ;;
  left)
    # sets external display to the left of the laptop screen
    xrandr --output "$(sysinfo seconddisplay)" --auto --left-of eDP-1 --primary
    xrandr --output eDP-1 --mode '1360x768' ;;
  scroff)
    # disables external display
    xrandr --output "$(sysinfo seconddisplay)" --off
    xrandr --output eDP-1 --mode '1360x768';;
  copy)
    # copies the selection to clipboard
    copy ;;
  paste)
    # pastes from clipboard
    paste ;;
  *) printusage "$0" && exit 1
esac
